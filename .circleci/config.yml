version: 2

# Machines configs
machine_python3_postgres: &machine_python3_postgres_redis
  docker:
    - image: circleci/python:3.6.6
    - image: circleci/postgres:9.5-alpine-ram
      environment:
        POSTGRES_USER: debug
        POSTGRES_PASSWORD: debug
    - image: circleci/redis:3.2-alpine


# Individual (shared) steps.
step_checkout_repo: &step_checkout_repo
  checkout


jobs:
  test:
    <<: *machine_python3_postgres_redis
    steps:
      - *step_checkout_repo
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: v1-deps-{{ checksum "requirements_test.txt" }}
      - run:
          name: Create virtualenv and install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements_test.txt
      - save_cache:
          key: v1-deps-{{ checksum "requirements_test.txt" }}
          paths:
            - "venv"
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Install psql
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client-9.6
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            make debug_pytest

  deploy_to_dev:
    docker:
      - image: circleci/python:3.6.6
    steps:
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - checkout
      - run:
          command: make heroku_deploy_dev

  integration_tests:
    docker:
      - image: circleci/python:3.6.6
    steps:
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - checkout
      - run:
          command: make integration_tests

workflows:
  version: 2
  test_and_deploy_to_dev_and_run_integration_tests:
    jobs:
      - test
      - deploy_to_dev:
          requires:
            - test
          filters:
            branches:
              only: master
      - integration_tests:
          requires:
            - deploy_to_dev
          filters:
            branches:
              only: master
