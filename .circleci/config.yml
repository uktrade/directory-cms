version: 2
jobs:
  test:
    working_directory: /tmp/cci-test
    docker:
      - image: circleci/python:3.9.5
      - image: circleci/redis:3.2-alpine
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: v1-deps-{{ checksum "requirements_test.txt" }}
      - run:
          name: Create virtualenv and install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            make install_requirements
      - save_cache:
          key: v1-deps-{{ checksum "requirements_test.txt" }}
          paths:
            - "venv"
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            mkdir test-reports
            TESTFILES=$(circleci tests glob "tests/**/*.py")
            ENV_FILES=test,dev pytest ${TESTFILES} --cov=. --cov-config=.coveragerc --cov-report html --cov-report term --junitxml=test-reports/junit.xml
            codecov
      - run: mkdir -p workspace
      - run: echo "export TARGET_CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM" >> workspace/new-env-vars
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - persist_to_workspace:
          root: workspace
          paths:
              - new-env-vars

  notify:
    working_directory: /tmp/cci-test
    docker:
      - image: circleci/python:3.9.5
    steps:
      - attach_workspace:
          at: /tmp/cci-test/workspace
      - run: cat workspace/new-env-vars >> $BASH_ENV
      - run: echo $TARGET_CIRCLE_BUILD_NUM;
      - run:
          name: Trigger tests complete
          command: curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$TARGET_CIRCLE_BUILD_NUM&payload[status]=done"

  flake8:
    docker:
      - image: circleci/python:3.9.5
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Run flake8
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install flake8
            make flake8

  migrations:
    docker:
      - image: circleci/python:3.9.5
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: v1-deps-{{ checksum "requirements_test.txt" }}
      - run:
          name: Create virtualenv and install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            make install_requirements
      - save_cache:
          key: v1-deps-{{ checksum "requirements_test.txt" }}
          paths:
            - "venv"
      - run:
          name: Check migrations
          command: |
            . venv/bin/activate
            make check_migrations

workflows:
  version: 2
  test_and_flake8:
    jobs:
      - test
      - flake8
      - migrations
      - notify:
          requires:
            - test
