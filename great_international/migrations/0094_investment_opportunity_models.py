# Generated by Django 2.2.24 on 2021-08-12 09:58

import core.model_fields
import core.models
from django.db import migrations, models
import django.db.models.deletion
import great_international.blocks.investment_atlas
import great_international.panels.investment_atlas
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('great_international', '0093_auto_20200414_1626'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestmentOpportunityListingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('service_name', models.CharField(choices=[('FIND_A_SUPPLIER', 'Find a Supplier'), ('EXPORT_READINESS', 'Export Readiness'), ('INVEST', 'Invest'), ('COMPONENTS', 'Components'), ('GREAT_INTERNATIONAL', 'Great International')], db_index=True, max_length=100, null=True)),
                ('uses_tree_based_routing', models.BooleanField(default=False, help_text="Allow this page's URL to be determined by its slug, and the slugs of its ancestors in the page tree.", verbose_name='tree-based routing enabled')),
                ('breadcrumbs_label', models.CharField(max_length=50)),
                ('breadcrumbs_label_en_gb', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_de', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_ja', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_zh_hans', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_fr', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_es', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_pt', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_ar', models.CharField(max_length=50, null=True)),
                ('search_results_title', models.CharField(max_length=255)),
                ('search_results_title_en_gb', models.CharField(max_length=255, null=True)),
                ('search_results_title_de', models.CharField(max_length=255, null=True)),
                ('search_results_title_ja', models.CharField(max_length=255, null=True)),
                ('search_results_title_zh_hans', models.CharField(max_length=255, null=True)),
                ('search_results_title_fr', models.CharField(max_length=255, null=True)),
                ('search_results_title_es', models.CharField(max_length=255, null=True)),
                ('search_results_title_pt', models.CharField(max_length=255, null=True)),
                ('search_results_title_ar', models.CharField(max_length=255, null=True)),
                ('hero_text', models.TextField(help_text='Text that appears beneath the page title', max_length=2000)),
                ('hero_text_en_gb', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_de', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_ja', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_zh_hans', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_fr', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_es', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_pt', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('hero_text_ar', models.TextField(help_text='Text that appears beneath the page title', max_length=2000, null=True)),
                ('contact_cta_title', models.CharField(blank=True, max_length=50)),
                ('contact_cta_title_en_gb', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_de', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_ja', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_zh_hans', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_fr', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_es', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_pt', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_title_ar', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_cta_text', models.TextField(blank=True, max_length=1000)),
                ('contact_cta_text_en_gb', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_de', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_ja', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_zh_hans', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_fr', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_es', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_pt', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_text_ar', models.TextField(blank=True, max_length=1000, null=True)),
                ('contact_cta_link', models.URLField(blank=True)),
                ('contact_cta_link_en_gb', models.URLField(blank=True, null=True)),
                ('contact_cta_link_de', models.URLField(blank=True, null=True)),
                ('contact_cta_link_ja', models.URLField(blank=True, null=True)),
                ('contact_cta_link_zh_hans', models.URLField(blank=True, null=True)),
                ('contact_cta_link_fr', models.URLField(blank=True, null=True)),
                ('contact_cta_link_es', models.URLField(blank=True, null=True)),
                ('contact_cta_link_pt', models.URLField(blank=True, null=True)),
                ('contact_cta_link_ar', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(core.models.WagtailAdminExclusivePageMixin, 'wagtailcore.page', great_international.panels.investment_atlas.InvestmentOpportunityListingPagePanels),
        ),
        migrations.CreateModel(
            name='InvestmentOpportunityPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('service_name', models.CharField(choices=[('FIND_A_SUPPLIER', 'Find a Supplier'), ('EXPORT_READINESS', 'Export Readiness'), ('INVEST', 'Invest'), ('COMPONENTS', 'Components'), ('GREAT_INTERNATIONAL', 'Great International')], db_index=True, max_length=100, null=True)),
                ('uses_tree_based_routing', models.BooleanField(default=False, help_text="Allow this page's URL to be determined by its slug, and the slugs of its ancestors in the page tree.", verbose_name='tree-based routing enabled')),
                ('breadcrumbs_label', models.CharField(max_length=50)),
                ('breadcrumbs_label_en_gb', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_de', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_ja', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_zh_hans', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_fr', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_es', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_pt', models.CharField(max_length=50, null=True)),
                ('breadcrumbs_label_ar', models.CharField(max_length=50, null=True)),
                ('priority_weighting', models.DecimalField(decimal_places=2, default='0.0', help_text='For use when auto-ordering results or automatically choosing which to show - an Opportunity with a higher priority weighting will be shown earlier. Max val: 999.99', max_digits=5)),
                ('featured_images', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_en_gb', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_de', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_ja', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_zh_hans', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_fr', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_es', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_pt', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('featured_images_ar', wagtail.fields.StreamField([('images', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False))]))], blank=True, null=True)),
                ('strapline', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200)),
                ('strapline_en_gb', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_de', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_ja', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_zh_hans', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_fr', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_es', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_pt', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('strapline_ar', models.CharField(help_text='A single sentence which directly brings to the direct opportunity to the fore. 200 chars max.', max_length=200, null=True)),
                ('introduction', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300)),
                ('introduction_en_gb', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_de', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_ja', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_zh_hans', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_fr', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_es', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_pt', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('introduction_ar', core.model_fields.MarkdownField(help_text='A single paragraph of 300 characters max including spaces to introduce the opportunity – what is the vision / ambition of the opportunity, timeline and where relevant, procurement method. What type of investor is this suitable for? Where is it and why is that important? Further detail can be provided in the “The Opportunity” section.', max_length=300, null=True)),
                ('opportunity_summary', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300)),
                ('opportunity_summary_en_gb', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_de', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_ja', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_zh_hans', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_fr', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_es', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_pt', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('opportunity_summary_ar', models.TextField(help_text='Simple summary of the Opportunity, for display on OTHER pages (eg listing pages) which link TO a full page about this opportunity. 300 chars max.', max_length=300, null=True)),
                ('location', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200)),
                ('location_en_gb', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_de', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_ja', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_zh_hans', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_fr', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_es', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_pt', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_ar', models.CharField(blank=True, help_text='Verbose display name for the location. Geospatial and region data is set in the Location and Relevant Regions tab.', max_length=200, null=True)),
                ('location_coords', models.CharField(blank=True, max_length=200)),
                ('promoter', models.CharField(blank=True, max_length=200)),
                ('promoter_en_gb', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_de', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_ja', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_zh_hans', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_fr', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_es', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_pt', models.CharField(blank=True, max_length=200, null=True)),
                ('promoter_ar', models.CharField(blank=True, max_length=200, null=True)),
                ('scale', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255)),
                ('scale_en_gb', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_de', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_ja', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_zh_hans', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_fr', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_es', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_pt', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_ar', models.CharField(blank=True, help_text='Verbose description of investment scale', max_length=255, null=True)),
                ('scale_value', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_en_gb', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_de', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_ja', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_zh_hans', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_fr', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_es', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_pt', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('scale_value_ar', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Scale value (in millions)')),
                ('time_to_investment_decision', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50)),
                ('time_to_investment_decision_en_gb', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_de', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_ja', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_zh_hans', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_fr', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_es', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_pt', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('time_to_investment_decision_ar', models.CharField(blank=True, choices=[('TIME_TO_INVESTMENT_DECISION_0M_6M', '0-6 months'), ('TIME_TO_INVESTMENT_DECISION_6M_12M', '6-12 months'), ('TIME_TO_INVESTMENT_DECISION_1Y_2Y', '1-2 years'), ('TIME_TO_INVESTMENT_DECISION_2Y_PLUS', '2 years +')], max_length=50, null=True)),
                ('main_content', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_en_gb', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_de', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_ja', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_zh_hans', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_fr', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_es', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_pt', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
                ('main_content_ar', wagtail.fields.StreamField([('copy', wagtail.blocks.StructBlock([('text_content', great_international.blocks.investment_atlas.MarkdownBlock(required=True)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))])), ('contact_details', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(max_length=255, required=True)), ('job_title', wagtail.blocks.CharBlock(max_length=255, required=True)), ('contact_link', wagtail.blocks.CharBlock(blank=True, help_text='Can be a URL or an email link in the format mailto:user@example.com', null=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alt', wagtail.blocks.CharBlock(max_length=255, required=True)), ('caption', wagtail.blocks.CharBlock(max_length=255, required=False)), ('custom_css_class', wagtail.blocks.CharBlock(help_text="Only needed if special styling is involved: check with a developer. If in doubt, it's not needed", max_length=255, required=False))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', great_international.panels.investment_atlas.InvestmentOpportunityPagePanels),
        ),
        migrations.CreateModel(
            name='InvestmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PlanningStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Planning Status choices',
            },
        ),
        migrations.CreateModel(
            name='InvestmentOpportunityRelatedSubSectors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_sub_sectors', to='great_international.InvestmentOpportunityPage')),
                ('related_sub_sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='great_international.InternationalSubSectorPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvestmentOpportunityRelatedSectors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_sectors', to='great_international.InvestmentOpportunityPage')),
                ('related_sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='great_international.InternationalSectorPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_ar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_de',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_en_gb',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_es',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_fr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_ja',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_pt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='investment_type_zh_hans',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.InvestmentType'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_ar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_de',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_en_gb',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_es',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_fr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_ja',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_pt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='planning_status_zh_hans',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='great_international.PlanningStatus'),
        ),
        migrations.AddField(
            model_name='investmentopportunitypage',
            name='related_regions',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='great_international.AboutUkRegionPage'),
        ),
    ]
