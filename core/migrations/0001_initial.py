# Generated by Django 4.1.9 on 2023-06-15 15:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0024_index_image_file_hash'),
        ('wagtailmedia', '0004_duration_optional_floatfield'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('wagtailcore', '0078_referenceindex'),
    ]

    operations = [
        migrations.CreateModel(
            name='GreatMedia',
            fields=[
                ('media_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailmedia.media')),
                ('transcript', models.TextField(blank=True, null=True, verbose_name='Transcript')),
                ('subtitles_en', models.TextField(blank=True, help_text='English-language subtitles for this video, in VTT format', null=True, verbose_name='English subtitles')),
            ],
            options={
                'verbose_name': 'media',
                'abstract': False,
            },
            bases=('wagtailmedia.media',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoutingSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root_path_prefix', models.CharField(blank=True, help_text="When determining URLs for a page in this site, the page's 'url_path' is prepended with this value to create a URL that will be recognised by the relevant front-end app.", max_length=100)),
                ('include_port_in_urls', models.BooleanField(default=True, help_text="This allows us to add dummy port values to Wagtail Site objects, to get around the unique hostname/port restrictions. If unchecked, the port won't be included in page URLs, and so becomes inconsequential.", verbose_name='include port in page URLs')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndustryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
        ),
        migrations.CreateModel(
            name='ImageHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_hash', models.CharField(max_length=1000)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentHash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_hash', models.CharField(max_length=1000)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.region')),
            ],
        ),
        migrations.CreateModel(
            name='Breadcrumb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(choices=[('FIND_A_SUPPLIER', 'Find a Supplier'), ('EXPORT_READINESS', 'Export Readiness'), ('INVEST', 'Invest'), ('COMPONENTS', 'Components'), ('GREAT_INTERNATIONAL', 'Great International')], db_index=True, max_length=50, null=True)),
                ('label', models.CharField(max_length=50)),
                ('label_en_gb', models.CharField(max_length=50, null=True)),
                ('label_de', models.CharField(max_length=50, null=True)),
                ('label_ja', models.CharField(max_length=50, null=True)),
                ('label_zh_hans', models.CharField(max_length=50, null=True)),
                ('label_fr', models.CharField(max_length=50, null=True)),
                ('label_es', models.CharField(max_length=50, null=True)),
                ('label_pt', models.CharField(max_length=50, null=True)),
                ('label_ar', models.CharField(max_length=50, null=True)),
                ('slug', models.SlugField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
    ]
